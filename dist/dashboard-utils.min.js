angular.module("enplug.utils.endpoint",[]).service("Endpoint",["EndpointCall","$log",function(EndpointCall,$log){"use strict";function execute(config){if(counter+=1,history[counter]=_.cloneDeep(config),_.isObject(config))return config.verbose=config.verbose||verboseMode,config.id=counter,verboseMode&&$log.debug("[#"+counter+" Endpoint] Executing "+config.method+" call"),new EndpointCall(config);$log.error("[#"+counter+" Endpoint] Invalid config given:",config)}var verboseMode=!1,counter=0,history=[];return{get:function(config){return _.isObject(config)&&(config.method="GET"),execute(config)},post:function(config){return _.isObject(config)&&(config.method="POST"),execute(config)},delete:function(config){return _.isObject(config)&&(config.method="DELETE"),execute(config)},verbose:function(bool){$log.debug("[enplug.utils - Endpoint] Setting verbose mode:",bool),verboseMode=bool},getHistory:function(){return history}}}]),angular.module("enplug.utils.libraries",["enplug.utils.libraries.lodash","enplug.utils.libraries.moment"]),angular.module("enplug.utils.resource",[]).service("ResourceService",["Endpoint","$log","ResourceTypes","$q","$timeout",function(Endpoint,$log,ResourceTypes,$q,$timeout){"use strict";function filterResources(resources,resourceTypes,filter){var filteredResources=[];return resourceTypes&&!_.isArray(resourceTypes)&&(resourceTypes=[resourceTypes]),$log.debug("Filtering resources by ",resourceTypes),_.each(resources,function(resource){resource=setResourceState(resource);var add=!0;resourceTypes&&(_.contains(resourceTypes,resource.ResourceType)||(add=!1)),_.isFunction(filter)&&(filter(resource)||(add=!1)),add&&filteredResources.push(resource)}),filteredResources}function setResourceState(resource){switch(resource.ResourceState){case"Ready":resource.isReady=!0;break;case"Uploaded":resource.isUploaded=!0;break;case"Encoded":resource.isEncoded=!0;break;case"Error":resource.isError=!0}return resource}function checkResourceState(resourceId,defer){$log.debug("Checking resource state."),$timeout(function(){Endpoint.get({path:resourcePaths.read,params:{resourceid:resourceId},success:function(resource){$log.debug("Resource ready:",resource),"Ready"===resource.ResourceState?defer.resolve(resource):checkResourceState(resourceId,defer)},error:function(){$log.debug("Error while checking resource."),defer.reject()}})},checkFrequencyMilliseconds)}var checkFrequencyMilliseconds=2e3,resourcePaths={read:"/resource",byUser:"/resources/byuser",remove:"/resource"},service={loadGraphics:function(filter){return service.loadResourcesByUser([ResourceTypes.IMAGE,ResourceTypes.VIDEO],filter)},loadResourcesByUser:function(resourceTypes,filter){return Endpoint.get({path:resourcePaths.byUser,parse:function(resources){return filterResources(resources,resourceTypes,filter)},success:function(resources){$log.debug("Loaded resources:",resources)}})},completeUpload:function(resourceId){var defer=$q.defer();return checkResourceState(resourceId,defer),defer.promise},setResourceState:setResourceState,removeResource:function(resourceId){return $log.debug("Deleting resource:",resourceId),Endpoint.delete({path:resourcePaths.remove,params:{resourceid:resourceId},success:function(){$log.debug("Deleted resource: ",resourceId)}})}};return service}]),angular.module("enplug.utils",["enplug.utils.browser","enplug.utils.confirm","enplug.utils.endpoint","enplug.utils.environment","enplug.utils.libraries","enplug.utils.resource"]),angular.module("enplug.utils.browser",[]).factory("Browser",function(){"use strict";function getBrowser(){var tem,ua=navigator.userAgent,M=ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];return/trident/i.test(M[1])?(tem=/\brv[ :]+(\d+)/g.exec(ua)||[],{name:"IE",version:tem[1]||""}):"Chrome"===M[1]&&null!=(tem=ua.match(/\bOPR\/(\d+)/))?{name:"Opera",version:tem[1]}:(M=M[2]?[M[1],M[2]]:[navigator.appName,navigator.appVersion,"-?"],null!=(tem=ua.match(/version\/(\d+)/i))&&M.splice(1,1,tem[1]),{name:M[0],version:M[1]})}var supported={Chrome:"43",Firefox:"38",IE:"10",Safari:"7"};return{supported:function(){var browser=getBrowser();if(supported[browser.name]){var supportedVersion=parseInt(supported[browser.name]);return parseInt(browser.version)>=supportedVersion}return!1}}}),angular.module("enplug.utils.confirm",["Confirm/confirm-dialog.tpl"]).service("Confirm",["ngDialog","$sce",function(ngDialog,$sce){"use strict";var defaults={title:"Default",text:"Default",cancelText:"Cancel",confirmText:"Confirm",confirmClass:"btn-primary",dialogClass:"confirm-dialog"},unsavedChangesDefaults={title:"Please Confirm",text:"There are unsaved changes. Are you sure you want to continue and discard your changes?",cancelText:"Cancel",confirmText:"Discard Changes",confirmClass:"btn-primary",dialogClass:"confirm-dialog"};return{open:function(opts){return opts=_.merge({},defaults,opts),ngDialog.openConfirm({template:"Confirm/confirm-dialog.tpl",controller:["$scope",function($scope){$scope.title=opts.title,$scope.text=$sce.trustAsHtml(opts.text),$scope.cancelText=opts.cancelText,$scope.confirmText=opts.confirmText,$scope.confirmClass=opts.confirmClass}],className:opts.dialogClass,showClose:!1,trapFocus:!1})},unsavedChanges:function(opts){return opts=_.merge({},unsavedChangesDefaults,opts),this.open(opts)}}}]),angular.module("enplug.utils").factory("EndpointCall",["$http","$q","$log","$rootScope","EndpointOptions",function($http,$q,$log,$rootScope,EndpointOptions){"use strict";function debug(config,message,data){config.verbose&&log(config,message,data)}function log(config,message,data,level){level||(level="debug"),data?$log[level]("[#"+config.id+" EndpointCall] "+message,_.cloneDeep(data)):$log[level]("[#"+config.id+" EndpointCall] "+message)}function warn(config,message,data){log(config,message,data,"warn")}function error(config,message,data){log(config,message,data,"error")}function successCallback(data,settings){angular.isFunction(settings.success)&&(debug(settings,"Calling success callback."),settings.success(data))}function errorCallback(data,settings){angular.isFunction(settings.error)&&(debug(settings,"Calling error callback."),settings.error(data))}function handleError(errorCode){"NoAccessToken"!==errorCode&&"InvalidAccessToken"!==errorCode||$rootScope.$broadcast("EndpointCall:tokenError")}return function(config){debug(config,"Creating EndpointCall with config:",config);var settings=EndpointOptions.new(config);if(_.isString(settings.url))return debug(settings,"Making EndpointCall with EndpointOptions:",settings),$http({method:settings.method,headers:settings.headers,url:settings.url,cache:settings.cache,data:settings.data,params:settings.params,transformResponse:settings.transformResponse,withCredentials:settings.withCredentials}).then(function(response){if(debug(settings,"$http returned with response:",response),angular.isFunction(settings.checkResponse)?(debug(settings,"Running custom check response on data:",response.data),response.data=settings.checkResponse(response.data,settings),debug(settings,"Data after check response:",response.data)):warn(settings,"Check response callback is not a valid function:",settings),response.data.error)return handleError(response.data.errorCode),console.log("API error, request data: "+JSON.stringify({method:settings.method,headers:settings.headers,url:settings.url,cache:settings.cache,data:settings.data,params:settings.params,withCredentials:settings.withCredentials})),console.log("API error, response: "+JSON.stringify(response)),error(settings,"API error, full $http response: ",response),errorCallback(response.data,settings),$q.reject(response.data.reason);var returnData;return angular.isFunction(settings.parse)?(debug(settings,"Calling response parser on data:",response.data.data),returnData=settings.parse(response.data.data),debug(settings,"After response parser:",returnData)):returnData=response.data.data,successCallback(returnData,settings),returnData},function(response){return error(settings,"HTTP error, full $http response: ",response),errorCallback(error.data,settings),$q.reject(_.get(error.data,"reason"))});error(config,"Invalid URL given to EndpointCall. EndpointOptions:",settings);var defer=$q.defer();return defer.reject("There was an error."),defer.promise}}]),angular.module("enplug.utils").factory("EndpointOptions",["$log","Environment","$httpParamSerializerJQLike",function($log,Environment,$httpParamSerializerJQLike){"use strict";function debug(config,message,data){config.verbose&&log(config,message,data)}function log(config,message,data,level){level||(level="debug"),data?$log[level]("[#"+config.id+" EndpointOptions] "+message,_.cloneDeep(data)):$log[level]("[#"+config.id+" EndpointOptions] "+message)}function warn(config,message,data){log(config,message,data,"warn")}function error(config,message,data){log(config,message,data,"error")}function Options(config){function defaultTransformResponse(data){var result={data:!1,error:!1,reason:null};try{data=angular.isObject(data)?data:JSON.parse(data)}catch(e){error(config,"Exception thrown while parsing JSON resonse: ",e),data=null}return null===data?(error(config,"Null data returned from default transform response"),result.error=!0,result.reason="There was an error. Error code: 011.",result):(result.data=data,debug(config,"Parsed data in default transform response:",result.data),result)}var availableOptions={method:"GET",url:null,host:null,path:null,endpoint:null,cache:!1,data:null,headers:{},payload:null,prepare:null,params:{},formData:!1,useToken:!0,transformResponse:defaultTransformResponse,checkResponse:defaultCheckResponse,parse:null,success:null,error:null,successMessage:null,errorMessage:null,usePersistentParams:!0,persistentParams:persistentParams,withCredentials:!0},options=_.merge({},availableOptions,config);if(config&&config.headers&&Object.keys(config.headers).filter(function(key){return void 0===config.headers[key]}).forEach(function(key){options.headers[key]=void 0}),debug(config,"Options before processing:",options),Object.keys(persistentParams).length)if(debug(config,"Persistent parameters available:",persistentParams),options.useToken&&options.usePersistentParams){var appliedPersistentParams=Object.assign({},persistentParams);appliedPersistentParams.token&&(options.headers.Authorization="Bearer "+persistentParams.token,delete appliedPersistentParams.token),options.params=_.merge({},appliedPersistentParams,options.params),debug(config,"Persistent params applied. Parameters:",options.params)}else debug(config,"Persistent params not applied.");if(checkForMissingParams(options.params,config),options.url&&options.transformResponse!==defaultTransformResponse&&warn(config,"Absolute URL given to Endpoint without custom transform response callback."),options.url?debug(config,"Not building URL, absolute given:",options.url):(options.url=getUrl(options),debug(config,"Built URL:",options.url)),angular.isFunction(options.prepare)){debug(config,"Calling prepare function on data:",options.data);var dataCopy=_.cloneDeep(options.data);options.data=options.prepare(dataCopy),debug(config,"Data after prepare function:",options.data)}return options.formData&&(options.headers["Content-Type"]="application/x-www-form-urlencoded",options.data=$httpParamSerializerJQLike(options.data),debug(config,"Added form data headers and serialized data. Options:",options)),options}function checkForMissingParams(params,config){_.forIn(params,function(value,key){_.isUndefined(value)&&warn(config,"API call parameter "+key+" is undefined. Params: ",params),_.isNull(value)&&warn(config,"API call parameter "+key+" is null. Params: ",params)})}function getUrl(options){var endpoint,host=options.host||Environment.host(),path=options.endpoint||options.path;if(_.isString(path))return debug(options,"Building URL with values:",{host:host,path:path}),path.indexOf(".")>-1&&((endpoint=getEndpointFromPath(path,options))||error(options,"Could not find endpoint for path: ",path)),host+(endpoint||path);warn(options,"Path was not a string for options:",options)}function getEndpointFromPath(path,config){return debug(config,"Returning endpoint from path"),Object.keys(endpoints).length||warn(config,"No endpoints have been registered yet"),path.split(".").reduce(function(map,key){return map[key]},endpoints)}function defaultCheckResponse(result,config){debug(config,"Running default check response on result:",result.data);var data=result.data;return!1===data.Success||angular.isUndefined(data.Result)?(debug(config,"API failure. Success was false or Result was undefined."),result.error=!0,result.errorCode=data.ErrorCode,result.reason=data.ErrorMessage):(debug(config,"API success"),_.isArray(data.Result)?data.Result.forEach(function(result){delete result.__type}):_.isObject(data.Result)&&delete data.Result.__type,result.data=data.Result),result}var persistentParams={},endpoints={};return{new:function(config){return new Options(config)},setEndpoints:function(_endpoints){_.merge(endpoints,_endpoints)},setPersistentParam:function(key,value){persistentParams[key]=value},unsetPersistentParam:function(key){delete persistentParams[key]}}}]);var extension=location.hostname.split(".").pop();switch(extension){case"com":document.domain="enplug.com";break;case"in":document.domain="enplug.in";break;case"loc":document.domain="enplug.loc"}console.log("Environment initialized to",document.domain),angular.module("enplug.utils.environment",[]).provider("Environment",function(){"use strict";function getParameterByName(name){name=name.replace(/[\[]/g,"\\[").replace(/[\]]/g,"\\]");var regex=new RegExp("[\\?&]"+name+"=([^&#]*)"),results=regex.exec(window.location.search);return null===results?null:decodeURIComponent(results[1].replace(/\+/g," "))}function getCookie(sKey){if(!sKey)return null;var encodedKey=encodeURIComponent(sKey);return document.cookie.split(";").reduce(function(value,keyValueString){if(null!==value)return value;var pairArray=keyValueString.trim().split("=");return pairArray[0]===encodedKey?pairArray[1]:value},null)}function setCookie(sKey,sValue,vEnd,sPath,sDomain,bSecure){if(!sKey||/^(?:expires|max\-age|path|domain|secure)$/i.test(sKey))return!1;var cookieFields=[],sExpires="";if(vEnd)switch(vEnd.constructor){case Number:sExpires=vEnd===1/0?"expires=Fri, 31 Dec 9999 23:59:59 GMT":"max-age="+vEnd;break;case String:sExpires="expires="+vEnd;break;case Date:sExpires="expires="+vEnd.toUTCString()}return cookieFields.push(encodeURIComponent(sKey)+"="+encodeURIComponent(sValue)),""!==sExpires&&cookieFields.push(sExpires),sDomain&&cookieFields.push("domain="+sDomain),sPath&&cookieFields.push("path="+sPath),bSecure&&cookieFields.push("secure"),document.cookie=cookieFields.join("; "),!0}var fallbackEnv,currentEnv,cookieName="ENVIRONMENT",paramName=cookieName.toLowerCase();Object.defineProperties(this,{PRODUCTION:{configurable:!1,enumerable:!0,writeable:!1,value:"prod"},STAGING:{configurable:!1,enumerable:!0,writeable:!1,value:"staging"},DEV:{configurable:!1,enumerable:!0,writeable:!1,value:"dev"}}),fallbackEnv=this.PRODUCTION,this.isValidEnvValue=function(){var envValues=[this.PRODUCTION,this.STAGING,this.DEV];return function(value){return envValues.some(function(envVal){return envVal===value})}}.call(this),this.getDefault=function(){var hostname=window.location.hostname,hostLessSubdomain=hostname.split(".").slice(1).join("."),localOrDevRegexp=/(local|dev)-[\w]*\.enplug\.in/i;return"enplug.com"===hostLessSubdomain||"enplug.net"===hostLessSubdomain?this.PRODUCTION:localOrDevRegexp.test(hostname)?this.DEV:"enplug.in"===hostLessSubdomain?this.STAGING:"enplug.loc"===hostLessSubdomain||"enplug.local"===hostLessSubdomain?this.DEV:(console.warn("Could not determine the environment for hostname "+hostname+", falling back to",fallbackEnv),fallbackEnv)},this.getEnvironmentPrefix=function(){var regexp=/(local|dev)-[\w]*\.enplug\.in/i,matches=regexp.exec(window.location.hostname);return matches&&matches[1]?matches[1]+"-":""},this.get=function(){return currentEnv},this.isProduction=function(){return this.get()===this.PRODUCTION},this.isStaging=function(){return this.get()===this.STAGING},this.isDev=function(){return this.get()===this.DEV},this.hosts=function(){return{dev:{core:"https://dev-core.enplug.in/v1",monitoring:"https://dev-monitoring.enplug.in/v1/edumonitoring",social:"https://dev-social.enplug.in/v1"},staging:{core:"https://staging-core.enplug.in/v1",monitoring:"https://staging-monitoring.enplug.in/v1/edumonitoring",social:"https://staging-social.enplug.in/v1"},prod:{core:"https://core.enplug.com/v1",monitoring:"https://monitoring.enplug.com/v1/edumonitoring",social:"https://social-server.enplug.com/v1"}}},this.host=function(type){var env=this.hosts()[this.get()];return type?env[type]:env.core||env},this.$get=function(){return this},function(){var paramValue=getParameterByName(paramName),cookieValue=getCookie(cookieName),setEnv=function(env){return setCookie(cookieName,env),currentEnv=env};return null!=paramValue&&this.isValidEnvValue(paramValue)?setEnv(paramValue):null!=cookieValue&&this.isValidEnvValue(cookieValue)?currentEnv=cookieValue:setEnv(this.getDefault())}.call(this)}),angular.module("enplug.utils.libraries.lodash",[]).factory("_",function(){return window._}),angular.module("enplug.utils.libraries.moment",[]).factory("moment",function(){return window.moment}),angular.module("enplug.utils").constant("ResourceTypes",{IMAGE:"Image",VIDEO:"Video"}),angular.module("dashboard-utils-templates",["Confirm/confirm-dialog.tpl"]),angular.module("Confirm/confirm-dialog.tpl",[]).run(["$templateCache",function($templateCache){"use strict";$templateCache.put("Confirm/confirm-dialog.tpl",'<header><h2 ng-bind=title></h2></header><section><p ng-bind-html=text></p></section><footer><button class="btn btn-default" ng-bind=cancelText ng-click=closeThisDialog()></button> <button class=btn ng-class=confirmClass ng-bind=confirmText ng-click=confirm()></button></footer>')}]);