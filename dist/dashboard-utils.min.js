angular.module("enplug.utils.endpoint",[]).service("Endpoint",["EndpointCall","$log",function(EndpointCall,$log){"use strict";function execute(config){return counter+=1,history[counter]=_.cloneDeep(config),_.isObject(config)?(config.verbose=config.verbose||verboseMode,config.id=counter,verboseMode&&$log.debug("[#"+counter+" Endpoint] Executing "+config.method+" call"),new EndpointCall(config)):void $log.error("[#"+counter+" Endpoint] Invalid config given:",config)}var verboseMode=!1,counter=0,history=[];return{get:function(config){return _.isObject(config)&&(config.method="GET"),execute(config)},post:function(config){return _.isObject(config)&&(config.method="POST"),execute(config)},"delete":function(config){return _.isObject(config)&&(config.method="DELETE"),execute(config)},verbose:function(bool){$log.debug("[enplug.utils - Endpoint] Setting verbose mode:",bool),verboseMode=bool},getHistory:function(){return history}}}]),angular.module("enplug.utils.libraries",["enplug.utils.libraries.lodash","enplug.utils.libraries.moment"]),angular.module("enplug.utils.mixins",[]),angular.module("enplug.utils.mixins").config([function(){function validString(string,length){return _.isUndefined(string)||_.isNull(string)||!_.isString(string)?!1:length?string.length>=length:string.length>0}function moveArrayItem(array,oldIdx,newIdx){if(newIdx>=array.length)for(var k=newIdx-array.length;k--+1;)array.push(void 0);return array.splice(newIdx,0,array.splice(oldIdx,1)[0])}function validJSON(str){try{var o=JSON.parse(JSON.stringify(JSON.parse(str)));if(o&&"object"==typeof o&&null!==o)return!0}catch(e){return!1}return!1}angular.isUndefinedOrNull=function(val){return angular.isUndefined(val)||null===val},angular.emptyObject=function(obj){var prop;for(prop in obj)obj.hasOwnProperty(prop)&&delete obj[prop]},_.mixin({validString:validString}),_.mixin({move:moveArrayItem}),_.mixin({isJSON:validJSON}),function(){function _dynamicSortMultiple(attr){var props=arguments;return function(obj1,obj2){for(var i=0,result=0,numberOfProperties=props.length;0===result&&numberOfProperties>i;)result=_dynamicSort(props[i])(obj1,obj2),i+=1;return result}}function _dynamicSort(property){var sortOrder=1;return"-"===property[0]&&(sortOrder=-1,property=property.substr(1)),function(a,b){var result=a[property]<b[property]?-1:a[property]>b[property]?1:0;return result*sortOrder}}Object.defineProperty(Array.prototype,"sortBy",{enumerable:!1,writable:!0,value:function(){return this.sort(_dynamicSortMultiple.apply(null,arguments))}})}(),function(){Object.defineProperty(Array.prototype,"pushArray",{enumerable:!1,writable:!0,value:function(){var i,toPush=this.concat.apply([],arguments);for(i=0,len=toPush.length;i<len;++i)this.push(toPush[i])}})}(),function(){Object.defineProperty(Array.prototype,"last",{enumerable:!1,writable:!0,value:function(){return this[this.length-1]}})}(),function(){Object.defineProperty(Array.prototype,"toggle",{enumerable:!1,get:function(){return function(value){var index=this.indexOf(value);return-1===index?this.push(value):this.splice(index,1),this}}})}(),function(){Object.defineProperty(Array.prototype,"findOne",{enumerable:!1,get:function(){return function(query){var result=null;if("object"==typeof query&&null!==query){var property=Object.keys(query)[0],value=query[Object.keys(query)[0]];this.forEach(function(item){result||"object"==typeof item&&null!==item&&item[property]===value&&(result=item)})}else"string"==typeof query&&this.forEach(function(item){result||item===query&&(result=item)});return result}}})}(),function(){Object.defineProperty(Array.prototype,"findWhere",{enumerable:!1,get:function(){return function(query){var results=[];if("object"==typeof query&&null!==query){var property=Object.keys(query)[0],value=query[Object.keys(query)[0]];this.forEach(function(item){"object"==typeof item&&null!==item&&item[property]===value&&results.push(item)})}return result}}})}(),function(){Object.defineProperty(Array.prototype,"pluck",{enumerable:!1,get:function(){return function(query){var results=[];return"string"==typeof query&&null!==query&&this.forEach(function(item){item.hasOwnProperty(query)&&results.push(item[query])}),results}}})}(),function(){Object.defineProperty(String.prototype,"capitalize",{enumerable:!1,writable:!0,value:function(){return this.charAt(0).toUpperCase()+this.slice(1)}})}()}]),angular.module("enplug.utils.resource",[]).service("ResourceService",["Endpoint","$log","ResourceTypes","$q","$timeout",function(Endpoint,$log,ResourceTypes,$q,$timeout){"use strict";function filterResources(resources,resourceTypes,filter){var filteredResources=[];return resourceTypes&&!_.isArray(resourceTypes)&&(resourceTypes=[resourceTypes]),$log.debug("Filtering resources by ",resourceTypes),_.each(resources,function(resource){resource=setResourceState(resource);var add=!0;resourceTypes&&(_.contains(resourceTypes,resource.ResourceType)||(add=!1)),_.isFunction(filter)&&(filter(resource)||(add=!1)),add&&filteredResources.push(resource)}),filteredResources}function setResourceState(resource){switch(resource.ResourceState){case"Ready":resource.isReady=!0;break;case"Uploaded":resource.isUploaded=!0;break;case"Encoded":resource.isEncoded=!0;break;case"Error":resource.isError=!0}return resource}function checkResourceState(resourceId,defer){$log.debug("Checking resource state."),$timeout(function(){Endpoint.get({path:resourcePaths.read,params:{resourceid:resourceId},success:function(resource){$log.debug("Resource ready:",resource),"Ready"===resource.ResourceState?defer.resolve(resource):checkResourceState(resourceId,defer)},error:function(){$log.debug("Error while checking resource."),defer.reject()}})},checkFrequencyMilliseconds)}var checkFrequencyMilliseconds=2e3,resourcePaths={read:"/resource",byUser:"/resources/byuser",remove:"/resource"},service={loadGraphics:function(filter){return service.loadResourcesByUser([ResourceTypes.IMAGE,ResourceTypes.VIDEO],filter)},loadResourcesByUser:function(resourceTypes,filter){return Endpoint.get({path:resourcePaths.byUser,parse:function(resources){return filterResources(resources,resourceTypes,filter)},success:function(resources){$log.debug("Loaded resources:",resources)}})},completeUpload:function(resourceId){var defer=$q.defer();return checkResourceState(resourceId,defer),defer.promise},setResourceState:setResourceState,removeResource:function(resourceId){return $log.debug("Deleting resource:",resourceId),Endpoint["delete"]({path:resourcePaths.remove,params:{resourceid:resourceId},success:function(){$log.debug("Deleted resource: ",resourceId)}})}};return service}]),angular.module("enplug.utils.upload",["Upload/progress-bar.tpl","Upload/upload-button.tpl"]).service("epUpload",["$rootScope","$q","$log","Upload",function($rootScope,$q,$log,Upload){function inherits(ctor,superCtor){ctor.super_=superCtor,ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:!1,writeable:!0,configurable:!0}})}var _Upload=function(file,settings){if(!(this instanceof _Upload))return console.log("File: ",file),console.log("SettingsL ",settings),new _Upload(file,settings);EventEmitter.call(this);var _settings=angular.copy(settings),defaultSettings={url:"/resources",file:file,fileFormDataName:"Filedata",ignoreLoadingBar:!0};return delete _settings.file,_settings.data=_.isFunction(_settings.data)?_settings.data(file):_settings.data,console.log("Data Settings: ",_settings.data),this.settings=angular.extend(defaultSettings,_settings||{}),this};return inherits(_Upload,EventEmitter),_Upload.prototype.start=function(){function onProgress(event){var percent=parseInt(100*event.loaded/event.total);100===percent&&(percent=95),self.emit("progress",percent)}function onSuccess(data,status,headers,config){self.emit("finished",data.Result),data.Success!==!0||"undefined"==typeof data.Result?(self.emit("finished",new Error,data.Result),deferred.reject(new Error)):(self.emit("finished",null,data.Result),deferred.resolve(data.Result))}function onError(data,status,headers,config){self.emit("error",new Error)}var deferred=$q.defer(),self=this;return this.emit("start"),Upload.upload(self.settings).progress(onProgress).success(onSuccess).error(onError).then(function(){}),deferred.promise},_Upload}]),angular.module("enplug.utils",["enplug.utils.confirm","enplug.utils.endpoint","enplug.utils.environment","enplug.utils.libraries","enplug.utils.mixins","enplug.utils.resource","enplug.utils.timer","enplug.utils.upload"]),angular.module("enplug.utils.confirm",["Confirm/confirm-dialog.tpl"]).service("Confirm",["ngDialog","$sce",function(ngDialog,$sce){"use strict";var defaults={title:"Default",text:"Default",cancelText:"Cancel",confirmText:"Confirm",confirmClass:"btn-primary"},unsavedChangesDefaults={title:"Please Confirm",text:"There are unsaved changes. Are you sure you want to continue and discard your changes?",cancelText:"Cancel",confirmText:"Discard Changes",confirmClass:"btn-primary"};return{open:function(opts){return opts=_.merge({},defaults,opts),ngDialog.openConfirm({template:"Confirm/confirm-dialog.tpl",controller:["$scope",function($scope){$scope.title=opts.title,$scope.text=$sce.trustAsHtml(opts.text),$scope.cancelText=opts.cancelText,$scope.confirmText=opts.confirmText,$scope.confirmClass=opts.confirmClass}],className:"confirm-dialog",showClose:!1,trapFocus:!1})},unsavedChanges:function(opts){return opts=_.merge({},unsavedChangesDefaults,opts),this.open(opts)}}}]),angular.module("enplug.utils").factory("EndpointCall",["$http","$q","$log","EndpointOptions",function($http,$q,$log,EndpointOptions){"use strict";function debug(config,message,data){config.verbose&&log(config,message,data)}function log(config,message,data,level){level||(level="debug"),data?$log[level]("[#"+config.id+" EndpointCall] "+message,_.cloneDeep(data)):$log[level]("[#"+config.id+" EndpointCall] "+message)}function warn(config,message,data){log(config,message,data,"warn")}function error(config,message,data){log(config,message,data,"error")}function successCallback(data,settings){angular.isFunction(settings.success)&&(debug(settings,"Calling success callback."),settings.success(data))}function errorCallback(data,settings){angular.isFunction(settings.error)&&(debug(settings,"Calling error callback."),settings.error(data))}return function(config){debug(config,"Creating EndpointCall with config:",config);var settings=EndpointOptions["new"](config);if(_.isString(settings.url))return debug(settings,"Making EndpointCall with EndpointOptions:",settings),$http({method:settings.method,headers:settings.headers,url:settings.url,cache:settings.cache,data:settings.data,params:settings.params,transformResponse:settings.transformResponse}).then(function(response){if(debug(settings,"$http returned with response:",response),angular.isFunction(settings.checkResponse)?(debug(settings,"Running custom check response on data:",response.data),response.data=settings.checkResponse(response.data,settings),debug(settings,"Data after check response:",response.data)):warn(settings,"Check response callback is not a valid function:",settings),response.data.error)return error(settings,"API error, full $http response: ",response),errorCallback(response.data,settings),$q.reject(response.data.reason);var returnData;return angular.isFunction(settings.parse)?(debug(settings,"Calling response parser on data:",response.data.data),returnData=settings.parse(response.data.data),debug(settings,"After response parser:",returnData)):returnData=response.data.data,successCallback(returnData,settings),returnData},function(response){return error(settings,"HTTP error, full $http response: ",response),errorCallback(error.data,settings),$q.reject(_.get(error.data,"reason"))});error(config,"Invalid URL given to EndpointCall. EndpointOptions:",settings);var defer=$q.defer();return defer.reject("There was an error."),defer.promise}}]),angular.module("enplug.utils").factory("EndpointOptions",["$log","Environment","$httpParamSerializerJQLike",function($log,Environment,$httpParamSerializerJQLike){"use strict";function debug(config,message,data){config.verbose&&log(config,message,data)}function log(config,message,data,level){level||(level="debug"),data?$log[level]("[#"+config.id+" EndpointOptions] "+message,_.cloneDeep(data)):$log[level]("[#"+config.id+" EndpointOptions] "+message)}function warn(config,message,data){log(config,message,data,"warn")}function error(config,message,data){log(config,message,data,"error")}function Options(config){function defaultTransformResponse(data){var result={data:!1,error:!1,reason:null};try{data=angular.isObject(data)?data:JSON.parse(data)}catch(e){error(config,"Exception thrown while parsing JSON resonse: ",e),data=null}return null===data?(error(config,"Null data returned from default transform response"),result.error=!0,result.reason="There was an error. Error code: 011.",result):(result.data=data,debug(config,"Parsed data in default transform response:",result.data),result)}var availableOptions={method:"GET",url:null,host:null,path:null,endpoint:null,cache:!1,data:null,headers:{},payload:null,prepare:null,params:{},formData:!1,useToken:!0,transformResponse:defaultTransformResponse,checkResponse:defaultCheckResponse,parse:null,success:null,error:null,successMessage:null,errorMessage:null,usePersistentParams:!0,persistentParams:persistentParams},options=_.merge({},availableOptions,config);if(debug(config,"Options before processing:",options),Object.keys(persistentParams).length&&(debug(config,"Persistent parameters available:",persistentParams),options.useToken&&options.usePersistentParams?(options.params=_.merge({},persistentParams,options.params),debug(config,"Persistent params applied. Parameters:",options.params)):debug(config,"Persistent params not applied.")),checkForMissingParams(options.params,config),options.url&&options.transformResponse!==defaultTransformResponse&&warn(config,"Absolute URL given to Endpoint without custom transform response callback."),options.url?debug(config,"Not building URL, absolute given:",options.url):(options.url=getUrl(options),debug(config,"Built URL:",options.url)),angular.isFunction(options.prepare)){debug(config,"Calling prepare function on data:",options.data);var dataCopy=_.cloneDeep(options.data);options.data=options.prepare(dataCopy),debug(config,"Data after prepare function:",options.data)}return options.formData&&(options.headers["Content-Type"]="application/x-www-form-urlencoded",options.data=$httpParamSerializerJQLike(options.data),debug(config,"Added form data headers and serialized data. Options:",options)),options}function checkForMissingParams(params,config){_.forIn(params,function(value,key){_.isUndefined(value)&&warn(config,"API call parameter "+key+" is undefined. Params: ",params),_.isNull(value)&&warn(config,"API call parameter "+key+" is null. Params: ",params)})}function getUrl(options){var endpoint,host=options.host||Environment.host(),path=options.endpoint||options.path;return _.isString(path)?(debug(options,"Building URL with values:",{host:host,path:path}),path.indexOf(".")>-1&&(endpoint=getEndpointFromPath(path,options),endpoint||error(options,"Could not find endpoint for path: ",path)),host+(endpoint||path)):void warn(options,"Path was not a string for options:",options)}function getEndpointFromPath(path,config){debug(config,"Returning endpoint from path"),Object.keys(endpoints).length||warn(config,"No endpoints have been registered yet");var splitPath=path.split(".");return splitPath.reduce(function(map,key){return map[key]},endpoints)}function defaultCheckResponse(result,config){debug(config,"Running default check response on result:",result.data);var data=result.data;return data.Success===!1||angular.isUndefined(data.Result)?(debug(config,"API failure. Success was false or Result was undefined."),result.error=!0,result.reason=data.ErrorMessage):(debug(config,"API success"),_.isArray(data.Result)?data.Result.forEach(function(result){delete result.__type}):_.isObject(data.Result)&&delete data.Result.__type,result.data=data.Result),result}var persistentParams={},endpoints={};return{"new":function(config){return new Options(config)},setEndpoints:function(_endpoints){_.assign(endpoints,_endpoints)},setPersistentParam:function(key,value){persistentParams[key]=value},unsetPersistentParam:function(key){delete persistentParams[key]}}}]),angular.module("enplug.utils.environment",[]).factory("Environment",["$cookies",function($cookies){"use strict";return{PRODUCTION:"prod",STAGING:"staging",DEV:"dev",get:function(){var env=$cookies.get("env"),hosts={"app.enplug.com":this.PRODUCTION,"staging.enplug.com":this.STAGING,"dev.enplug.com":this.DEV},host=window.location.hostname;return angular.isString(env)?env:(env=hosts[host]||this.STAGING,$cookies.put("env",env),env)},isProduction:function(){return this.get()===this.PRODUCTION},isStaging:function(){return this.get()===this.STAGING},isDev:function(){return this.get()===this.DEV},setEnvironment:function(env,callback){$cookies.put("env",env),callback&&callback()},hosts:function(){return{dev:{adserver:"https://aws-dev1.enplug.com/v1",social:"https://aws-dev1.enplug.com/v1/social"},staging:{adserver:"https://staging-adserver.enplug.com/v1",social:"https://staging-social.enplug.com/v1"},prod:{adserver:"https://adservernet.enplug.com/v1",monitoring:"https://monitoring.enplug.com/v1",social:"https://social-server.enplug.com/v1"}}},host:function(type){var env=this.hosts()[this.get()];return type?env[type]:env.adserver||env}}}]),angular.module("enplug.utils.libraries.lodash",[]).factory("_",function(){return window._}),angular.module("enplug.utils.libraries.moment",[]).factory("moment",function(){return window.moment}),angular.module("enplug.utils").constant("ResourceTypes",{IMAGE:"Image",VIDEO:"Video"}),angular.module("enplug.utils.timer",[]).factory("Timer",["$rootScope","$timeout",function($rootScope,$timeout){"use strict";function cancelTimer(index){var exists=angular.isObject(timers[index]);return exists&&(null!==timers[index]&&$timeout.cancel(timers[index].cancel),delete timers[index]),exists}function cancelTimers(event){for(var timer in timers)timers.hasOwnProperty(timer)&&timers[timer].event===event&&cancelTimer(timer)}function pauseTimers(){paused=!0}function restartTimers(){paused=!1}var timers={},paused=!1,i=0;$rootScope.$on("$locationChangeStart",function(){cancelTimers("pageChange"),cancelTimers("resolve")}),$rootScope.$on("pageHidden",pauseTimers),$rootScope.$on("pageVisible",restartTimers);var service={add:function(func,interval,immediateStart,cancelEvent){var method=function(){var removeTimer=!1;paused||(removeTimer=func()),delete timers[i],"resolve"!==cancelEvent?service.add(func,interval,!1,cancelEvent):removeTimer.then(function(){},function(){service.add(func,interval,!1,cancelEvent)})};return immediateStart===!0&&func(),timers[i]={cancel:$timeout(method,interval),event:cancelEvent,method:method,interval:interval,immediateStart:immediateStart},i+=1,i-1},cancel:function(index){return cancelTimer(index)},cancelAll:function(){pauseTimers();for(var timer in timers)cancelTimer(timer);restartTimers()}};return service}]),angular.module("enplug.utils").controller("ProgressBarController",["$scope","$log","$timeout",function($scope,$log,$timeout){$scope.progress=0,$scope.showing=!1,$scope.$on("startProgress",function(){$log.debug("Starting upload progress."),$scope.showing=!0,$scope.progress=0}),$scope.$on("updateProgress",function(event,percent){$scope.progress=percent}),$scope.$on("completeProgress",function(){$scope.progress=100,$timeout(function(){$log.debug("Complete upload progress."),$scope.showing=!1,$scope.progress=0},1e3)})}]),angular.module("enplug.utils").directive("progressBar",["$log","$timeout",function($log,$timeout){return{templateUrl:"/js/modules/App/partials/progress-bar.html",link:function($scope,$element,$attrs){console.log("Loaded progress bar."),$scope.progress=0,$scope.showing=!1,$scope.$on("startProgress",function(){$log.debug("Starting upload progress."),$scope.showing=!0,$scope.progress=0}),$scope.$on("updateProgress",function(event,percent){$scope.progress=percent}),$scope.$on("completeProgress",function(){$scope.progress=100,$timeout(function(){$log.debug("Complete upload progress."),$scope.showing=!1,$scope.progress=0},1e3)})}}}]),angular.module("enplug.utils").directive("upload",["$rootScope","$log","Upload","Environment",function($rootScope,$log,Upload,Environment){"use strict";var maxFileSize=1e8;return{templateUrl:"Upload/upload-button.tpl.html",replace:!0,scope:{settings:"=settings"},link:function($scope,$element){function init(_settings){settings=angular.copy(_settings||$scope.settings||{}),settings.dropzone||settings.hideFilename||(settings.showFilename=!0),settings.multiple&&$element.find("input").attr("multiple",!0),settings.accept||(settings.accept="*"),settings.url=Environment.host()+settings.url,settings.label||(settings.label="Upload"),$scope.uploadLabel=settings.label,$scope.uploadId=Math.floor(1001*Math.random())+0,$scope.settings=settings}function startUpload($file){$scope.$broadcast("startProgress");var fields=_.isFunction(settings.fields)?settings.fields($file):settings.fields;Upload.upload({url:settings.url,fields:fields,file:$file,fileFormDataName:"Filedata",ignoreLoadingBar:!0}).progress(uploadProgress).success(uploadSuccess).error(uploadError).then(function(){$scope.uploadPercent=0}),$scope.fileName=$file.name}function uploadProgress(event){var percent=parseInt(100*event.loaded/event.total);100===percent&&(percent=95),$scope.$broadcast("updateProgress",percent)}function uploadSuccess(data,status,headers,config){var resource=data.Result;data.Success!==!0||_.isUndefined(resource)?error(data):($log.debug("Successful upload: ",resource),complete(resource)),$scope.$broadcast("completeProgress")}function complete(resource){_.isFunction(settings.success)&&settings.success(resource),$scope.successfulUpload=!0}function error(data){$log.debug("Unsuccessful upload."),_.isFunction(settings.error)&&settings.error(data)}function uploadError(data,status,headers,config){$log.error("Upload error.")}var settings;init($scope.settings),$scope.process=function($files){settings.onSelect&&settings.onSelect($files),("undefined"==typeof settings.autoUpload||settings.autoUpload)&&$scope.upload($files)},$scope.upload=function($files){$files.forEach(function($file){$file.size<=maxFileSize?($scope.fileName=$file.name,startUpload($file)):window.alert("This file is larger than the maximum allowed size (100 MBs).")})},$rootScope.$on("upload",function(e,uploadSettings,file){init(uploadSettings),$scope.upload([file])})}}}]),angular.module("dashboard-utils-templates",["Confirm/confirm-dialog.tpl","Upload/progress-bar.tpl","Upload/upload-button.tpl"]),angular.module("Confirm/confirm-dialog.tpl",[]).run(["$templateCache",function($templateCache){"use strict";$templateCache.put("Confirm/confirm-dialog.tpl",'<header><h2 ng-bind=title></h2></header><section><p ng-bind-html=text></p></section><footer><button class="btn btn-default" ng-bind=cancelText ng-click=closeThisDialog()></button> <button class=btn ng-class=confirmClass ng-bind=confirmText ng-click=confirm()></button></footer>')}]),angular.module("Upload/progress-bar.tpl",[]).run(["$templateCache",function($templateCache){"use strict";$templateCache.put("Upload/progress-bar.tpl","")}]),angular.module("Upload/upload-button.tpl",[]).run(["$templateCache",function($templateCache){"use strict";$templateCache.put("Upload/upload-button.tpl",'<div class=upload-wrapper><label ng-show=settings.hideFilename class="btn btn-primary btn-sm" for="upload-{{ uploadId }}"><i class="icon icon-cloud-upload"></i> <span ng-bind=uploadLabel></span></label><div ng-show=settings.showFilename><div ng-hide=successfulUpload><label class="btn btn-default" for="upload-{{ uploadId }}" ng-bind=uploadLabel></label></div><div ng-show=successfulUpload><label class=upload-filename ng-bind=fileName for="upload-{{ uploadId }}" title="Click to change."></label></div></div><div ng-show=settings.dropzone><label for="upload-{{ uploadId }}" ngf-drop=process($files) ngf-drag-over-class=dropzone-hover><img src=/img/icons/new-upload.png class="img-responsive"></label></div><input style="display: none" id="upload-{{ uploadId }}" type=file ngf-max-size=100000000 ngf-select=process($files) accept="{{ settings.accept }}"><div class=progress-wrapper ng-controller=ProgressBarController ng-show=showing><p><strong>Uploading File:</strong> <span ng-bind=fileName></span></p><div progressbar class="progress-striped active" value=progress type=success><span>{{ progress }}%</span></div></div></div>')}]);